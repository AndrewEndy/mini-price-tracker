import datetime
from typing import List
from app.models import Price, Product, User


async def get_text_for_all_products(products: List['Product']) -> str:
    '''–§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –ø—Ä–æ –≤—Å—ñ —Ç–æ–≤–∞—Ä–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'''
    
    text = '<b>–û—Å—å –≤—Å—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤–∞—à—ñ —Ç–æ–≤–∞—Ä–∏</b>üßê:\n'
    for product in products:
        
        text += await get_info_product(product)
        text += '\n\n'
        
    return text


async def get_text_for_one_product(product: Product) -> str:
    '''–§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –ø—Ä–æ —Ç–æ–≤–∞—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'''
    
    text = '<b>–û—Å—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ü–µ–π —Ç–æ–≤–∞—Ä</b>üßê:\n'
    
    text += await get_info_product(product)
        
    text += f'\nüîó<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è: </b> {product.url}\n\n'
        
    return text


async def get_update_data_text(product: Product, last_price_obj: Price, min_price_obj: Price, max_price_obj: Price, new_price_obj: Price) -> str:
    '''–§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏'''
    
    text = '<b>–û—Å—å –û–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ —Ç–æ–≤–∞—Ä—É</b>üôå:\n'
    
    currency = '' if not last_price_obj.currency else last_price_obj.currency
    
    text = f'''\nüõí<b>–ú–∞–≥–∞–∑–∏–Ω:</b> {product.store_name}\nüìù<b>–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä–∞:</b> {product.product_name}\n'''
    unit_of_measure = None if not new_price_obj.unit_of_measure or new_price_obj.unit_of_measure == '—à—Ç.' else new_price_obj.unit_of_measure
    status = new_price_obj.status
    
    if unit_of_measure: text += f'<b>–û–±\'—î–º:</b> {unit_of_measure}\n'
    
    if last_price_obj.price != new_price_obj.price:
        text += f'''üí∏<b>–û—Å—Ç–∞–Ω–Ω—è —Ü—ñ–Ω–∞:</b> <s>{last_price_obj.price} {currency}</s> ‚û°Ô∏è {new_price_obj.price} {currency}\n'''
        text += f'''üóìÔ∏è<b>–û—Å—Ç–∞–Ω–Ω—è –¥–∞—Ç–∞ –∑–º—ñ–Ω:</b> {str(new_price_obj.date.date())}\n'''
    else:
        text += f'''üí∏<b>–û—Å—Ç–∞–Ω–Ω—è —Ü—ñ–Ω–∞:</b> {last_price_obj.price} {currency}\nüóìÔ∏è<b>–û—Å—Ç–∞–Ω–Ω—è –¥–∞—Ç–∞ –∑–º—ñ–Ω:</b> {str(last_price_obj.date.date())}\n'''
    
    if min_price_obj.price > new_price_obj.price:
        text += f'''\nüìâ<b>–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞:</b> <s>{min_price_obj.price} {currency}</s> ‚û°Ô∏è {new_price_obj.price} {currency}\n'''
        text += f'''üóìÔ∏è<b>–û—Å—Ç–∞–Ω–Ω—è –¥–∞—Ç–∞ –∑–º—ñ–Ω:</b> {str(new_price_obj.date.date())}\n'''
    else:
        text+=f'\nüìâ<b>–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞:</b> {min_price_obj.price} {currency}\nüóìÔ∏è<b>–û—Å—Ç–∞–Ω–Ω—è –¥–∞—Ç–∞ –∑–º—ñ–Ω:</b> {str(min_price_obj.date.date())}\n'
    
    if max_price_obj.price < new_price_obj.price:
        text += f'''\nüìà<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞:</b> <s>{max_price_obj.price} {currency}</s> ‚û°Ô∏è {new_price_obj.price} {currency}\n'''
        text += f'''üóìÔ∏è<b>–û—Å—Ç–∞–Ω–Ω—è –¥–∞—Ç–∞ –∑–º—ñ–Ω:</b> {str(new_price_obj.date.date())}\n'''
    else:
        text+=f'\nüìà<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞:</b> {max_price_obj.price} {currency}\nüóìÔ∏è<b>–û—Å—Ç–∞–Ω–Ω—è –¥–∞—Ç–∞ –∑–º—ñ–Ω:</b> {str(max_price_obj.date.date())}\n'
        
    if status:
        text += f'\n<b>üìç–°—Ç–∞—Ç—É—Å: </b>{status}\n'
        
    if new_price_obj.discount:
        text+=f'\n‚ÄºÔ∏è<b>–ù–∞ —Ç–æ–≤–∞—Ä –¥—ñ—î –∑–Ω–∏–∂–∫–∞</b>‚ÄºÔ∏è\n'
    
    text += f'\nüîó<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è: </b> {product.url}\n\n'
    
    return text


async def get_info_product(product: Product) -> str:
    # –û—Å—Ç–∞–Ω–Ω—è —Ü—ñ–Ω–∞ –∑–∞ –¥–∞—Ç–æ—é
    last_price_obj = max(product.prices, key=lambda price: price.date)
    last_price = last_price_obj.price
    last_date = last_price_obj.date

    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞
    max_price_obj = max(product.prices, key=lambda price: price.price)
    max_price = max_price_obj.price
    max_price_date = max_price_obj.date

    # –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞
    min_price_obj = min(product.prices, key=lambda price: price.price)
    min_price = min_price_obj.price
    min_price_date = min_price_obj.date
        
    currency = '' if not last_price_obj.currency else last_price_obj.currency
    unit_of_measure = None if not last_price_obj.unit_of_measure or last_price_obj.unit_of_measure == '—à—Ç.' else last_price_obj.unit_of_measure
    status = last_price_obj.status
    
    text = f'''\nüõí<b>–ú–∞–≥–∞–∑–∏–Ω:</b> {product.store_name}\nüìù<b>–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä–∞:</b> {product.product_name}\n'''
    
    if unit_of_measure: text += f'<b>–û–±\'—î–º:</b> {unit_of_measure}\n'
    
    text += f'''\nüí∏<b>–û—Å—Ç–∞–Ω–Ω—è —Ü—ñ–Ω–∞:</b> {last_price} {currency}\nüóìÔ∏è<b>–û—Å—Ç–∞–Ω–Ω—è –¥–∞—Ç–∞ –∑–º—ñ–Ω:</b> {str(last_date.date())}\n'''
    
    if last_price != min_price:
            text+=f'\nüìâ<b>–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞:</b> {min_price} {currency}\nüóìÔ∏è<b>–û—Å—Ç–∞–Ω–Ω—è –¥–∞—Ç–∞ –∑–º—ñ–Ω:</b> {str(min_price_date.date())}\n'
        
    if last_price != max_price:
        text+=f'\nüìà<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞:</b> {max_price} {currency}\nüóìÔ∏è<b>–û—Å—Ç–∞–Ω–Ω—è –¥–∞—Ç–∞ –∑–º—ñ–Ω:</b> {str(max_price_date.date())}\n'
        
    if status:
        text += f'\n<b>üìç–°—Ç–∞—Ç—É—Å: </b>{status}\n'
        
    if last_price_obj.discount:
        text+=f'\n‚ÄºÔ∏è<b>–ù–∞ —Ç–æ–≤–∞—Ä –¥—ñ—î –∑–Ω–∏–∂–∫–∞</b>‚ÄºÔ∏è\n'
    return text