import asyncio
from aiogram.types import BotCommand, BotCommandScopeDefault
from apscheduler.triggers.interval import IntervalTrigger
from app.bot.create_bot import bot, dp, scheduler, admins
from app.services import check_products_updates

#from work_time.send_message import send_message_time
from datetime import datetime, timedelta

from app.bot.handlers.user_handler import user_router
from app.bot.handlers.view_products_handler import view_router
from app.bot.handlers.update_product_handler import update_product_data_router
from app.bot.handlers.delete_product_handler import delete_product_router
from app.bot.handlers.add_product_handler import add_product_router


async def set_commands():
    commands = [BotCommand(command='start', description='–ó–∞–ø—É—Å—Ç–∏—Ç–∏/–ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞'),
                BotCommand(command='info', description='–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–æ—Ç'),
                BotCommand(command='menu', description='–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é')
                ]
    await bot.set_my_commands(commands, BotCommandScopeDefault())



async def start_bot():
    await set_commands()
        
    #count_users = await get_all_users(count=True)
    try:
        for admin_id in admins:
            await bot.send_message(admin_id, f'–Ø –∑–∞–ø—É—â–µ–Ω–∏–πü•≥')
    except:
        pass
    await check_products_updates()

# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –∫–æ–≥–¥–∞ –±–æ—Ç –∑–∞–≤–µ—Ä—à–∏—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É
async def stop_bot():
    try:
        for admin_id in admins:
            await bot.send_message(admin_id, '–ë–æ—Ç –≤–∏–∫–ª—é—á–µ–Ω–∏–πüòî')
    except:
        pass



async def main():
    scheduler.add_job(
        check_products_updates,  # –í–∞—à–∞ —Ñ—É–Ω–∫—Ü—ñ—è
        IntervalTrigger(hours=12),  # –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–∂–Ω—ñ 12 –≥–æ–¥–∏–Ω
        name="Check prices every 12 hours",
    )

#     scheduler.add_job(
#         check_products_updates,  # –í–∞—à–∞ —Ñ—É–Ω–∫—Ü—ñ—è
#         IntervalTrigger(minutes=1),  # –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è —Ç–µ—Å—Ç—É (–∫–æ–∂–Ω—É —Ö–≤–∏–ª–∏–Ω—É)
#         name="Check prices every minute (test)",
#     )

    scheduler.start()
    
    dp.include_router(user_router)
    dp.include_router(view_router)
    dp.include_router(update_product_data_router)
    dp.include_router(delete_product_router)
    dp.include_router(add_product_router)
    
    
    dp.startup.register(start_bot)
    dp.shutdown.register(stop_bot)

    try:
        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())
    finally:
        await bot.session.close()



if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print(f'\033[32m–ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–≤ —Ä–æ–±–æ—Ç—É\033[0m')




# TODO: –ø–æ—Ñ—ñ–∫—Å–∏—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É –∑–º—ñ–Ω—É, –≤—Å—å–æ —à–µ —Ä–∞–∑ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, –ó–∞–∫–æ–º—ñ—Ç–∏—Ç–∏